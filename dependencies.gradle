ext {

    //Android
    androidBuildToolsVersion = "29.0.2"
    androidMinSdkVersion = 23
    androidTargetSdkVersion = 29
    androidCompileSdkVersion = 29

    //Libraries
    rxJavaVersion = '2.4.0'
    rxAndroidVersion = '2.1.1'

    javaxAnnotationVersion = '1.3.2'
    androidAnnotationsVersion = '21.0.3'
    javaxInjectVersion = '1'
    ktxVersion = '1.3.1'
    fragmentKtxVersion = '1.2.3'
    appcompatVersion = '1.2.0'
    legacyVersion = '1.0.0'
    recyclerviewVersion = '1.1.0'
    constraintlayoutVersion = '2.0.1'

    daggerVersion = '2.27'
    retrofitVersion = '2.9.0'
//    gsonVersion = '2.8.6'
    moshiVersion = '1.9.3'
    lifecycleVersion = '2.2.0'

    okHttpVersion = '4.3.1'
    retrofitMoshiConverterVersion = '2.4.0'

    //Testing
    jUnitVersion = '4.13'
    assertJVersion = '3.15.0'
    mockitoVersion = '2.2.0'
    mockitoAndroidVersion = '2.23.4' // next versions throw
    // "java.lang.IllegalStateException:
    // Could not initialize plugin:
    // interface org.mockito.plugins.MockMaker (alternate: null)"
    // when run unit tests files of package "io.android.projectx.presentation.features"
    // under "test" path
    // module: "presentation"
    // Note that you should use Mockito 2.6+ to get native support for Android.

    robolectricVersion = '4.3.1'
    archVersion = '2.1.0'
    espressoVersion = '3.2.0'
    androidxTestCoreVersion = '1.2.0'
    runnerVersion = '1.2.0'


    domainDependencies = [
            javaxAnnotation: "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava         : "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
    ]

    domainTestDependencies = [
            junit  : "junit:junit:${jUnitVersion}",
            mockito: "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}"
    ]

    dataDependencies = [
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
            javaxAnnotation: "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
    ]

    dataTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            mockito    : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
    ]
    remoteDependencies = [
//            gson:               "com.google.code.gson:gson:${gsonVersion}",


            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
            javaxAnnotation:    "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            okHttp:             "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:       "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit:           "com.squareup.retrofit2:retrofit:${retrofitVersion}",

            retrofitConverter: "com.squareup.retrofit2:converter-moshi:${retrofitMoshiConverterVersion}",

            retrofitAdapter:    "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            moshi :              "com.squareup.moshi:moshi:${moshiVersion}",

            moshiAdapters    : "com.squareup.moshi:moshi-adapters:${moshiVersion}",
            moshiKotlin      : "com.squareup.moshi:moshi-kotlin:${moshiVersion}",
            moshiCodegen     : "com.squareup.moshi:moshi-kotlin-codegen:${moshiVersion}",

//dagger
            dagger                : "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler        : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroid         : "com.google.dagger:dagger-android:${daggerVersion}",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",

    ]

    remoteTestDependencies = [
            junit: "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
//        supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
//        supportRules: "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    mobileUiDependencies = [
             rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}",
            rxAndroid:          "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
             javaxAnnotation       : "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}",
             javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
             androidxCoreKtx       : "androidx.core:core-ktx:${ktxVersion}",
             fragmentKtx           : "androidx.fragment:fragment-ktx:${fragmentKtxVersion}",
             appCompat             : "androidx.appcompat:appcompat:${appcompatVersion}",
             legacyV4              : "androidx.legacy:legacy-support-v4:${legacyVersion}",
             legacyV13             : "androidx.legacy:legacy-support-v13:${legacyVersion}",
             constraintlayout      : "androidx.constraintlayout:constraintlayout:${constraintlayoutVersion}",
             recyclerView          : "androidx.recyclerview:recyclerview:${recyclerviewVersion}",

             //dagger
            dagger                : "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler        : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroid         : "com.google.dagger:dagger-android:${daggerVersion}",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",

             okHttp:             "com.squareup.okhttp3:okhttp:${okHttpVersion}",
             okHttpLogger:       "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
             moshi :              "com.squareup.moshi:moshi:${moshiVersion}",
             moshiAdapters    : "com.squareup.moshi:moshi-adapters:${moshiVersion}",
             moshiKotlin      : "com.squareup.moshi:moshi-kotlin:${moshiVersion}",


             lifecycleRuntime      : "androidx.lifecycle:lifecycle-runtime:${lifecycleVersion}",
             lifecycleExtensions   : "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",
             lifecycleCompiler     : "androidx.lifecycle:lifecycle-compiler:${lifecycleVersion}",
             lifecycleViewmodel    : "androidx.lifecycle:lifecycle-viewmodel:${lifecycleVersion}",
             lifecycleLivedata     : "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycleVersion}",

            // QR code scanner
            scanner :  "com.journeyapps:zxing-android-embedded:3.4.0"
    ]
}